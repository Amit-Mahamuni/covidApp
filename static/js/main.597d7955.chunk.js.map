{"version":3,"sources":["Components/CenterTable.js","Components/SearchFrm.js","App.js","reportWebVitals.js","index.js"],"names":["CenterTable","props","useState","filterlist","setfilterlist","filterCenterList","setfilterCenterList","blockSelect","setblockSelect","show","setShow","centDetail","setcentDetail","useEffect","localStorage","getItem","undefined","JSON","parse","setFilter","Object","keys","filterOptSet","find","sess","setItem","stringify","console","log","dateset","ageTemp","temp","centerList","centers","fee","filter","center","fee_type","toLowerCase","includes","block_name","age","sessions","min_age_limit","length","vaccine","availbility","available_capacity","dateformat","date","Date","split","reverse","join","toLocaleString","day","month","year","setFitopt","opt","val","FilterOpt","map","className","ButtonGroup","Button","size","variant","onClick","Form","Group","controlId","Control","as","value","onChange","event","target","CenterDetail","Modal","onHide","centered","Header","closeButton","Body","Row","Col","md","sm","name","district_name","state_name","pincode","href","Badge","pill","ListGroup","slots","time","Item","available_capacity_dose1","available_capacity_dose2","scrollDiv","dir","document","getElementById","scrollLeft","nextDay","setDate","getDate","toISOString","searchCal","cent","push","slotDetail","cent_id","cent_temp","center_id","TableData","data","vaccine_fees","datecol","testVac","testAge","testAvlcount","test","restsetFitopt","aria-label","id","Table","striped","bordered","hover","keyName","SearchFrm","state","setstate","city","setcity","setstatelist","setdistlist","centerListpss","setcenterListpss","options","setoptions","optionDist","setoptionDist","display","msg","progess","setprogress","status","network","setnetwork","dis_id","currDate","getCurrDate","dis_id_var","window","navigator","onLine","axios","get","then","response","alert","slice","optarry","states","x","state_id","label","districts","district_id","getLocalValue","Card","Title","isClearable","isSearchable","findIndex","parseInt","aria-labelledby","Spinner","animation","role","Alert","onClose","dismissible","App","Navbar","bg","Container","Brand","body","scrollTop","documentElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.597d7955.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Table, Badge, Row, Col, Modal,\r\n    ListGroup, ButtonGroup, Button, Form\r\n} from \"react-bootstrap\";\r\n\r\n// Covid App Work:\r\n// 1.add next and prev week data --Done\r\n// 2.add progress/spinner --Done\r\n// 3.remove bug from block list --Done\r\n\r\n// 4.check scrollable for div\r\n// 5.css - alignment of thead date --Done\r\n// 6.css = fixed the thead and result to top of page when scroll\r\n// 7.make spinner to overall -- inside model. --Done\r\n// 8.check net connection - if not show from localstroage & msg \"net not available\" --Done\r\n\r\nfunction CenterTable(props) {\r\n\r\n    const [filterlist, setfilterlist] = useState({ \"fee\": \"All\", \"availbility\": \"All\", \"age\": \"All\", \"vaccine\": \"All\", \"block_name\": \"All\" });\r\n    const [filterCenterList, setfilterCenterList] = useState();\r\n    const [blockSelect, setblockSelect] = useState();\r\n    const [show, setShow] = useState(false);\r\n    const [centDetail, setcentDetail] = useState({ \"center\": \"\" });\r\n\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"filter\") !== null &&\r\n            localStorage.getItem(\"filter\") !== \"\" &&\r\n            localStorage.getItem(\"filter\") !== undefined) {\r\n            setfilterlist(JSON.parse(localStorage.getItem(\"filter\")));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFilter();\r\n        // setShow(false);\r\n        if (Object.keys(filterOptSet).find((sess) => filterlist[sess] !== \"All\")) {\r\n            // props.setrchstate(false);\r\n        }\r\n        localStorage.setItem(\"filter\", JSON.stringify(filterlist));\r\n    }, [filterlist]);\r\n\r\n    useEffect(() => {\r\n        console.log(filterCenterList);\r\n    }, [filterCenterList]);\r\n\r\n    useEffect(() => {\r\n        console.log(centDetail);\r\n    }, [centDetail]);\r\n\r\n    useEffect(() => {\r\n        setFilter();\r\n    }, [props]);\r\n\r\n\r\n    const dateset = [];\r\n\r\n    const filterOptSet = {\r\n        \"fee\": [],\r\n        \"availbility\": [\"Available\", \"Book\"],\r\n        \"age\": [],\r\n        \"vaccine\": [],\r\n        \"block_name\": []\r\n    }\r\n\r\n    props.centerList.centers.map((cent) => {\r\n        if (!filterOptSet.block_name.includes(cent.block_name)) { filterOptSet.block_name.push(cent.block_name) }\r\n        if (!filterOptSet.fee.includes(cent.fee_type)) { filterOptSet.fee.push(cent.fee_type) }\r\n        cent.sessions.map((sess) => {\r\n            if (!dateset.includes(sess.date)) { dateset.push(sess.date) }\r\n            if (!filterOptSet.vaccine.includes(sess.vaccine)) { filterOptSet.vaccine.push(sess.vaccine) }\r\n            if (!filterOptSet.age.includes(sess.min_age_limit)) { filterOptSet.age.push(sess.min_age_limit) }\r\n        }\r\n        )\r\n    }\r\n    );\r\n\r\n    function setFilter() {\r\n        console.log(\"render\");\r\n        let temp = props.centerList.centers;\r\n        // props.setrchstate(false);\r\n\r\n        if (filterlist.fee !== \"All\") {\r\n            temp = temp.filter((center) =>\r\n                center.fee_type.toLowerCase().includes((filterlist.fee).toLowerCase())\r\n            )\r\n        }\r\n\r\n        if (filterlist.block_name !== \"All\") {\r\n            temp = temp.filter((center) =>\r\n                center.block_name == filterlist.block_name\r\n            )\r\n        }\r\n\r\n        if (filterlist.age !== \"All\") {\r\n            console.log(filterlist.age);\r\n            let ageTemp;\r\n            temp = temp.filter((center) => {\r\n                ageTemp = center.sessions.filter(sess => sess.min_age_limit === filterlist.age)\r\n                if (ageTemp.length === 0) {\r\n                    return false;\r\n                }\r\n                center.sessions = ageTemp;\r\n                return true;\r\n            }\r\n            );\r\n            console.log(ageTemp);\r\n        }\r\n\r\n        if (filterlist.vaccine !== \"All\") {\r\n            let ageTemp;\r\n            temp = temp.filter((center) => {\r\n                ageTemp = center.sessions.filter(sess =>\r\n                    sess.vaccine.toLowerCase().includes((filterlist.vaccine).toLowerCase())\r\n                )\r\n                if (ageTemp.length === 0) {\r\n                    return false;\r\n                }\r\n                center.sessions = ageTemp;\r\n                return true;\r\n            }\r\n            );\r\n        }\r\n\r\n        if (filterlist.availbility !== \"All\") {\r\n            let ageTemp;\r\n            temp = temp.filter((center) => {\r\n                ageTemp = center.sessions.filter(sess =>\r\n                    filterlist.availbility === \"Available\" ?\r\n                        sess.available_capacity > 0 : sess.available_capacity == 0\r\n                )\r\n                if (ageTemp.length === 0) {\r\n                    return false;\r\n                }\r\n                center.sessions = ageTemp;\r\n                return true;\r\n            }\r\n            );\r\n        }\r\n\r\n        if (filterlist.fee == \"All\" && filterlist.age == \"All\" &&\r\n            filterlist.vaccine == \"All\" && filterlist.availbility == \"All\"\r\n            && filterlist.block_name == \"All\") {\r\n            setfilterCenterList();\r\n        } else {\r\n            setfilterCenterList({ centers: temp });\r\n            localStorage.setItem(\"filter\", JSON.stringify(filterlist));\r\n        }\r\n\r\n        console.log(temp);\r\n    }\r\n\r\n    function dateformat(date) {\r\n        const dateObject = new Date((date).split(\"-\").reverse().join(\"/\"));\r\n        // const humanDateFormat = dateObject.toLocaleString();\r\n        var option = { day: \"numeric\", month: \"short\", year: \"numeric\" };\r\n        return dateObject.toLocaleString(undefined, option);\r\n    }\r\n\r\n    function setFitopt(opt, val) {\r\n        if (opt.split(\" \")[0] == \"block_name\") {\r\n            setblockSelect(val);\r\n            console.log(opt + \" = \" + val);\r\n        }\r\n        setfilterlist({ ...filterlist, [opt]: val });\r\n    }\r\n\r\n    function FilterOpt() {\r\n\r\n        return (\r\n            Object.keys(filterOptSet).map(function (opt) {\r\n                if (opt !== \"block_name\") {\r\n                    return (\r\n                        <div className=\"mr-2 my-2\" key={opt}>\r\n                            <ButtonGroup >\r\n                                <Button size=\"sm\" variant=\"outline-secondary\"\r\n                                    className={filterlist[opt] == \"All\" ? \"active\" : \"inactive\"}\r\n                                    onClick={() => setFitopt(opt, \"All\")}>All</Button>\r\n                                {\r\n                                    filterOptSet[opt].map((fee) =>\r\n                                        <Button size=\"sm\" variant=\"outline-secondary\" key={opt + \"_\" + fee}\r\n                                            className={filterlist[opt] == fee ? \"active\" : \"inactive\"}\r\n                                            onClick={() => setFitopt(opt, fee)}>{fee}\r\n                                        </Button>\r\n                                    )\r\n                                }\r\n\r\n                            </ButtonGroup>\r\n                            <small className=\"text-muted form-text\">{opt}</small>\r\n                        </div >\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\" className=\"mr-2 my-2\" key={opt}>\r\n                            <Form.Control as=\"select\" value={blockSelect} onChange={(event) => setFitopt(\"block_name\", event.target.value)}>\r\n                                <option>All</option>\r\n                                {\r\n                                    filterOptSet[opt].map((fee) =>\r\n                                        fee ? <option>{fee}</option> : <option>No Block</option>\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                            <small className=\"text-muted form-text\">Block</small>\r\n                        </Form.Group>\r\n                    )\r\n                }\r\n\r\n            })\r\n        )\r\n\r\n    }\r\n\r\n    function restsetFitopt(opt) {\r\n        console.log(opt);\r\n    }\r\n\r\n    function CenterDetail() {\r\n        console.log(centDetail);\r\n        return (\r\n            centDetail.center ?\r\n                <Modal show={show} onHide={() => setShow(false)} centered>\r\n                    <Modal.Header closeButton className=\"py-3\">\r\n                        <h5 className=\"my-auto\">Center Details</h5>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6} sm={12} className=\"mb-4\">\r\n                                    <span>\r\n                                        <span className=\"centerTitle\">{centDetail.center.name} </span><br />\r\n                                        <span className=\"centerSubTitle\">{centDetail.center.block_name + \", \" + centDetail.center.district_name + \", \" + centDetail.center.state_name + \",\" + centDetail.center.pincode}</span>\r\n                                    </span><br />\r\n                                    <a href={\"https://www.google.co.in/maps/search/\" + centDetail.center.name} target=\"blank\" className=\"btn btn-outline-secondary searchBtn\">Get Direction</a>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <hr />\r\n                        {\r\n                            centDetail.center.sessions.map((sess) =>\r\n                                <div className=\"border border-top-0 border-left-0 border-right-0 py-2\">\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <span><h5>Slot Details</h5>\r\n                                            <h5>{dateformat(sess.date)}</h5></span>\r\n                                        <span className=\"modelList\">\r\n                                            <span>{sess.vaccine}</span><br />\r\n                                            {\r\n                                                sess.available_capacity !== 0 ?\r\n                                                    <Badge pill variant=\"info\" className=\"border\">{\"Available : \" + sess.available_capacity}</Badge>\r\n                                                    : <Badge pill variant=\"danger\" className=\"border\">Booked</Badge>\r\n                                            }\r\n                                            <br /><span>{\"Age \" + sess.min_age_limit + \"+\"}</span>\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <Row>\r\n                                        <Col md={6} sm={12} className=\"mb-4\">\r\n                                            <h6>Time</h6>\r\n                                            <ListGroup className=\"modeltimeSlotList\">\r\n                                                {\r\n                                                    sess.slots.map((time) =>\r\n                                                        <ListGroup.Item>{time}</ListGroup.Item>\r\n                                                    )\r\n                                                }\r\n                                            </ListGroup>\r\n                                        </Col>\r\n                                        <Col md={6} sm={12}>\r\n                                            <h6>Vaccin </h6>\r\n                                            <ListGroup className=\"list-group-numbered\">\r\n                                                <ListGroup.Item className=\"d-flex justify-content-between align-items-center\">\r\n                                                    <span>1st Dose :</span><span>{sess.available_capacity_dose1}</span></ListGroup.Item>\r\n                                                <ListGroup.Item className=\"d-flex justify-content-between align-items-center\">\r\n                                                    <span>2nd Dose :</span><span>{sess.available_capacity_dose2}</span></ListGroup.Item>\r\n                                            </ListGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Modal.Body>\r\n                </Modal>\r\n                : null\r\n        )\r\n    }\r\n\r\n    function scrollDiv(dir) {\r\n        if (dir == \"L\") {\r\n            document.getElementById(\"wrapper\").scrollLeft -= 100;\r\n            console.log(dateset);\r\n\r\n            var day = new Date((dateset[0]).split(\"-\").reverse().join(\"-\"));\r\n            console.log(day);\r\n\r\n            var nextDay = new Date(day);\r\n            nextDay.setDate(day.getDate() - 6);\r\n            console.log(nextDay.toISOString().split(\"T\")[0].split(\"-\").reverse().join(\"-\"));\r\n            props.searchCal(null, nextDay.toISOString().split(\"T\")[0].split(\"-\").reverse().join(\"-\"));\r\n\r\n        } else {\r\n            document.getElementById(\"wrapper\").scrollLeft += 100;\r\n            console.log(dateset);\r\n\r\n            var day = new Date((dateset[dateset.length - 1]).split(\"-\").reverse().join(\"-\"));\r\n            console.log(day);\r\n\r\n            var nextDay = new Date(day);\r\n            nextDay.setDate(day.getDate() + 1);\r\n            console.log(nextDay.toISOString().split(\"T\")[0].split(\"-\").reverse().join(\"-\"));\r\n            props.searchCal(null, nextDay.toISOString().split(\"T\")[0].split(\"-\").reverse().join(\"-\"));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const slotDetail = (cent_id, date) => {\r\n        // console.log(cent_id + \"=\" + sess_id);\r\n        let cent_temp = props.centerList.centers.find((cent) => cent_id === cent.center_id);\r\n        // let sess_temp = cent_temp.sessions.find((sess) => sess_id === sess.session_id);\r\n        // setcentDetail({\"center\":cent_temp, \"session\":sess_temp})\r\n        setcentDetail({ ...centDetail, \"center\": cent_temp, \"select_date\": date })\r\n\r\n        // console.log(cent_temp);\r\n        // console.log(sess_temp);\r\n        setShow(true);\r\n    }\r\n\r\n    function TableData(props) {\r\n        return (\r\n            props.data.centers.map((cent) =>\r\n                <tr>\r\n                    <td className=\"sticky-col first-col\">\r\n                        <span className=\"centerTitle\">{cent.name} </span>\r\n                        {cent.fee_type == \"Paid\" ? <Badge variant=\"info\">{cent.fee_type}</Badge> : <span></span>} <br />\r\n                        <span className=\"centerSubTitle\">{cent.block_name + \", \" + cent.district_name + \", \" + cent.state_name + \",\" + cent.pincode}</span>\r\n                        {cent.vaccine_fees ? cent.vaccine_fees.map((fee) => { return (<span className=\"feetext\"><br /><span>{fee.vaccine + \" : ₹\" + fee.fee} </span></span>) }) : null}\r\n                    </td>\r\n                    {\r\n                        dateset.map((datecol) => {\r\n                            let temp;\r\n                            let testVac = [];\r\n                            let testAge = [];\r\n                            let testAvlcount = 0\r\n                            temp = cent.sessions.filter((sess) => datecol === sess.date);\r\n                            temp.map((test) => {\r\n\r\n                                if (!testVac.includes(test.vaccine)) { testVac.push(test.vaccine) }\r\n                                if (!testAge.includes(test.min_age_limit)) { testAge.push(test.min_age_limit) }\r\n                                if (test.available_capacity !== 0) { testAvlcount = testAvlcount + test.available_capacity }\r\n\r\n                                // console.log(cent.name + \" = \" + testVac.join(\" | \") + \" > \" + testAge.join(\" | \") + \" avl \" + testAvlcount);\r\n                            })\r\n                            return (\r\n                                <td className=\"text-center \">\r\n                                    {\r\n                                        temp.length !== 0 ?\r\n                                            <span>\r\n                                                {\r\n                                                    testAvlcount !== 0 ?\r\n                                                        <Badge pill variant=\"info\" className=\"border\">{\"Available : \" + testAvlcount}</Badge>\r\n                                                        : <Badge pill variant=\"danger\" className=\"border\">Booked</Badge>\r\n                                                }\r\n                                                <br /><span className=\"centerTitle \" > {testVac.join(\" | \")}</span><br />\r\n                                                <span className=\"centerSubTitle \">{\"Age \" + testAge.join(\" | \") + \"+\"}</span><br />\r\n                                                <Button variant=\"outline-secondary\" size=\"sm\" className=\"detailBtn\"\r\n                                                    onClick={() => slotDetail(cent.center_id,)}>Detail</Button>\r\n\r\n                                            </span>\r\n                                            :\r\n                                            <span>\r\n                                                <Badge pill variant=\"light\" className=\"border\">N/A</Badge>\r\n                                            </span>\r\n                                    }\r\n\r\n                                </td>\r\n                            )\r\n                        }\r\n                        )\r\n                    }\r\n                </tr>\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CenterDetail />\r\n            <div className=\"filterSec\">\r\n                <h5>Filter</h5>\r\n                <div className=\"filterOptSec\">\r\n                    <FilterOpt />\r\n                    <div className=\"mr-2 my-2\">\r\n                        <Button size=\"sm\" variant=\"outline-secondary\" className=\"resetbtn\"\r\n                            onClick={() => setfilterlist({ \"fee\": \"All\", \"availbility\": \"All\", \"age\": \"All\", \"vaccine\": \"All\", \"block_name\": \"All\" })}>Reset\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr /><br />\r\n            <div >\r\n                <Row><Col className=\"d-flex my-1 align-items-center\" sm={8}>\r\n                    {\r\n                        Object.keys(filterOptSet).find((sess) => filterlist[sess] !== \"All\")\r\n                            && filterCenterList ?\r\n                            <div className=\"filterOptSeclist\"><h5 className=\"filterTitleTxt\">{filterCenterList.centers.length} - Result For :</h5>\r\n                                {\r\n                                    Object.keys(filterOptSet).map((opt) => {\r\n                                        if (filterlist[opt] !== \"All\") {\r\n                                            return (\r\n                                                <Button size=\"sm\" variant=\"outline-dark\" key={opt + \"_Tag\"}\r\n                                                    className=\"filterTag mx-1\" onClick={() => restsetFitopt(opt)}>\r\n                                                    {opt == \"age\" ? \"Age \" + filterlist[opt] + \"+\" : filterlist[opt]}\r\n                                                </Button>\r\n                                            )\r\n                                        }\r\n                                    }\r\n\r\n                                    )\r\n                                }</div> : <h5 className=\"filterTitleTxt\">{props.centerList.centers.length + \" - Result\"}</h5>\r\n                    }\r\n                </Col><Col className=\"d-flex flex-row-reverse my-1 align-items-center\" sm={4}>\r\n                        <ButtonGroup className=\"ml-2\" aria-label=\"First group\">\r\n                            <Button variant=\"outline-secondary\" size=\"sm\"\r\n                                onClick={() => scrollDiv(\"L\")}\r\n                            >Prev</Button>\r\n                            <Button variant=\"outline-secondary\" size=\"sm\"\r\n                                onClick={() => scrollDiv(\"R\")}\r\n                            >Next</Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <div className=\"wrapper\" id=\"wrapper\">\r\n                <Table striped bordered hover>\r\n                    <thead >\r\n                        <tr>\r\n                            <th className=\"sticky-col first-col\">Center</th>\r\n                            {\r\n                                dateset.map((keyName) => {\r\n                                    return (\r\n                                        <th key={keyName} >\r\n                                            {dateformat(keyName)}\r\n                                        </th>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    {\r\n                        filterCenterList ?\r\n                            <tbody>{console.log(\"filterlist\")}\r\n                                <TableData data={filterCenterList} />\r\n                            </tbody>\r\n                            :\r\n                            props.centerList ?\r\n                                <tbody>{console.log(\"mianlist\")}<TableData data={props.centerList} /> </tbody>\r\n                                : null\r\n                    }\r\n\r\n                </Table>\r\n            </div>\r\n            {filterCenterList ?\r\n                filterCenterList.centers.length == 0 ?\r\n                    <h5 className=\"text-center\">No Result Found</h5> : null\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CenterTable;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Col, Form, Spinner, Alert, Modal } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport CenterTable from \"./CenterTable\";\r\nimport 'boxicons';\r\nimport Select from 'react-select';\r\n\r\nfunction SearchFrm() {\r\n\r\n    const [state, setstate] = useState({ id: \"\", name: \"\" });\r\n    const [city, setcity] = useState({ id: \"\", name: \"\" });\r\n    const [statelist, setstatelist] = useState();\r\n    const [distlist, setdistlist] = useState();\r\n    const [centerListpss, setcenterListpss] = useState();\r\n    const [options, setoptions] = useState([]);\r\n    const [optionDist, setoptionDist] = useState([]);\r\n    const [progess, setprogress] = useState({ display: false, msg: \"\" });\r\n    const [network, setnetwork] = useState({ status: true, msg: \"Your Online !\" });\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // getList();\r\n        getLocalValue();\r\n        if (!window.navigator.onLine) {\r\n            setnetwork({ status: false, msg: \"Your Offline. plese Check Connection !\" });\r\n            setShow(true);\r\n        }\r\n\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    // }, [optionDist]);\r\n\r\n\r\n    // function getList() {\r\n    //     if (window.navigator.onLine) {\r\n    //         axios.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\").then((response) => {\r\n    //             //console.log(stateList.states);\r\n    //             let optarry = [];\r\n    //             response.data.states.map((x) =>\r\n    //                 optarry.push({ value: x.state_id, label: x.state_name })\r\n    //             );\r\n    //             setoptions(optarry);\r\n    //             setstatelist(response.data.states);\r\n    //             localStorage.setItem(\"statelist\", JSON.stringify(response.data.states));\r\n    //             setnetwork({ status: true, msg: \"Your Online !\" });\r\n    //         });\r\n    //     } else {\r\n    //         let optarry = [];\r\n    //         setstatelist(JSON.parse(localStorage.getItem(\"statelist\")));\r\n    //         JSON.parse(localStorage.getItem(\"statelist\")).map((x) =>\r\n    //             optarry.push({ value: x.state_id, label: x.state_name })\r\n    //         );\r\n    //         setoptions(optarry);\r\n    //         setnetwork({ status: false, msg: \"Your Offline. plese Check Connection !\" });\r\n    //         setShow(true);\r\n    //     }\r\n    // }\r\n\r\n    function getLocalValue() {\r\n\r\n        if (window.navigator.onLine) {\r\n\r\n            //get State from api\r\n            axios.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\").then((response) => {\r\n                //console.log(stateList.states);\r\n                let optarry = [];\r\n                response.data.states.map((x) =>\r\n                    optarry.push({ value: x.state_id, label: x.state_name })\r\n                );\r\n                setoptions(optarry);\r\n                setstatelist(response.data.states);\r\n                localStorage.setItem(\"statelist\", JSON.stringify(response.data.states));\r\n\r\n            });\r\n\r\n            //get pervState value from local\r\n            if (localStorage.getItem(\"prevstate\") !== null &&\r\n                localStorage.getItem(\"prevstate\") !== \"\" &&\r\n                localStorage.getItem(\"prevstate\") !== undefined) {\r\n\r\n                setstate(JSON.parse(localStorage.getItem(\"prevstate\")));\r\n\r\n                //get district list from api\r\n                axios.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/districts/\" + JSON.parse(localStorage.getItem(\"prevstate\")).id).then((response) => {\r\n                    //console.log(response.data);\r\n                    let optarry = [];\r\n                    response.data.districts.map((x) =>\r\n                        optarry.push({ value: x.district_id, label: x.district_name })\r\n                    );\r\n                    setoptionDist(optarry);\r\n                    setdistlist(response.data.districts);\r\n                    localStorage.setItem(\"distlist\", JSON.stringify(response.data.districts));\r\n                });\r\n            }\r\n\r\n            //get perv district value \r\n            if (localStorage.getItem(\"prevdistrict\") !== null &&\r\n                localStorage.getItem(\"prevdistrict\") !== \"\" &&\r\n                localStorage.getItem(\"prevdistrict\") !== undefined) {\r\n                setcity(JSON.parse(localStorage.getItem(\"prevdistrict\")));\r\n\r\n                //get new data with prev district value                \r\n                searchCal(JSON.parse(localStorage.getItem(\"prevdistrict\")).id, getCurrDate());\r\n\r\n            }\r\n\r\n            setnetwork({ status: true, msg: \"Your Online !\" });\r\n\r\n        } else {\r\n\r\n            if (localStorage.getItem(\"statelist\") !== null &&\r\n                localStorage.getItem(\"statelist\") !== \"\" &&\r\n                localStorage.getItem(\"statelist\") !== undefined) {\r\n\r\n                let optarry = [];\r\n                setstatelist(JSON.parse(localStorage.getItem(\"statelist\")));\r\n                JSON.parse(localStorage.getItem(\"statelist\")).map((x) =>\r\n                    optarry.push({ value: x.state_id, label: x.state_name })\r\n                );\r\n                setoptions(optarry);\r\n            }\r\n\r\n            //get pervState value from local\r\n            if (localStorage.getItem(\"prevstate\") !== null &&\r\n                localStorage.getItem(\"prevstate\") !== \"\" &&\r\n                localStorage.getItem(\"prevstate\") !== undefined) {\r\n\r\n                setstate(JSON.parse(localStorage.getItem(\"prevstate\")));\r\n\r\n            }\r\n\r\n            if (localStorage.getItem(\"distlist\") !== null &&\r\n                localStorage.getItem(\"distlist\") !== \"\" &&\r\n                localStorage.getItem(\"distlist\") !== undefined) {\r\n\r\n                let optarry = [];\r\n                setdistlist(JSON.parse(localStorage.getItem(\"distlist\")));\r\n                JSON.parse(localStorage.getItem(\"distlist\")).map((x) =>\r\n                    optarry.push({ value: x.district_id, label: x.district_name })\r\n                );\r\n                setoptionDist(optarry);\r\n            }\r\n\r\n            //get perv district value \r\n            if (localStorage.getItem(\"prevdistrict\") !== null &&\r\n                localStorage.getItem(\"prevdistrict\") !== \"\" &&\r\n                localStorage.getItem(\"prevdistrict\") !== undefined) {\r\n\r\n                setcity(JSON.parse(localStorage.getItem(\"prevdistrict\")));\r\n\r\n            }\r\n\r\n            if (localStorage.getItem(\"centerlist\") !== null &&\r\n                localStorage.getItem(\"centerlist\") !== \"\" &&\r\n                localStorage.getItem(\"centerlist\") !== undefined) {\r\n                setcenterListpss(JSON.parse(localStorage.getItem(\"centerlist\")));\r\n            }\r\n\r\n            setnetwork({ status: false, msg: \"Your Offline. plese Check Connection !\" });\r\n            setShow(true);\r\n        }\r\n\r\n    }\r\n\r\n    function setState(event) {\r\n        if (window.navigator.onLine) {\r\n            setstate({ name: event.label, id: event.value });\r\n            localStorage.setItem(\"prevstate\", JSON.stringify({ name: event.label, id: event.value }));\r\n            localStorage.setItem(\"prevdistrict\", null);\r\n            setcity({ name: \"\", id: \"\" });\r\n            setprogress({ ...progess, display: true });\r\n            axios.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/districts/\" + event.value).then((response) => {\r\n                //console.log(response.data);\r\n                let optarry = [];\r\n                response.data.districts.map((x) =>\r\n                    optarry.push({ value: x.district_id, label: x.district_name })\r\n                );\r\n                localStorage.setItem(\"optarry\", JSON.stringify(optarry));\r\n                setoptionDist(optarry);\r\n                setprogress({ ...progess, display: false, msg: \"Data get sucessfully\" });\r\n            });\r\n            setnetwork({ status: true, msg: \"Your Online !\" });\r\n        } else {\r\n            setnetwork({ status: false, msg: \"Your Offline. plese Check Connection !\" });\r\n            setShow(true);\r\n        }\r\n\r\n    }\r\n\r\n    function setDistrict(event) {\r\n        if (window.navigator.onLine) {\r\n            setcity({ name: event.label, id: event.value });\r\n            localStorage.setItem(\"prevdistrict\", JSON.stringify({ name: event.label, id: event.value }));\r\n        } else {\r\n            setnetwork({ status: false, msg: \"Your Offline. plese Check Connection !\" });\r\n            setShow(true);\r\n        }\r\n\r\n    }\r\n\r\n    function searchCal(dis_id, currDate = getCurrDate()) {\r\n\r\n        let dis_id_var = city.id;\r\n        if (dis_id) {\r\n            dis_id_var = dis_id;\r\n        }\r\n        if (window.navigator.onLine) {\r\n            setprogress({ ...progess, display: true });\r\n            axios.get(\"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=\" + dis_id_var + \"&date=\" + currDate).then((response) => {\r\n                console.log(response);\r\n                if (response.status === 200) {\r\n                    if (response.data.centers.length !== 0) {\r\n                        setcenterListpss(response.data);\r\n                        localStorage.setItem(\"centerlist\", JSON.stringify(response.data));\r\n                        setprogress({ ...progess, display: false, msg: \"Data get sucessfully\" });\r\n                    } else {\r\n                        setprogress({ ...progess, display: false, msg: \"Sry No Data Found\" });\r\n                        alert(progess.msg + \" \" + response.status)\r\n                    }\r\n                } else {\r\n                    setprogress({ ...progess, display: false, msg: \"Network Error\" });\r\n                    alert(progess.msg + \" \" + response.status);\r\n                }\r\n            });\r\n\r\n            setnetwork({ status: true, msg: \"Your Online !\" });\r\n        } else {\r\n            setnetwork({ status: false, msg: \"Your Offline. plese Check Connection !\" });\r\n            setShow(true);\r\n        }\r\n\r\n    }\r\n\r\n    function getCurrDate() {\r\n        return new Date().toISOString().slice(0, 10).split(\"-\").reverse().join(\"-\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"bg-white shadow\">\r\n                <Card.Body>\r\n                    <Card.Title><h5>Search vaccination center near you.</h5></Card.Title>\r\n                    <Form.Row className=\"seachfrm\">\r\n                        <Col md={4} sm={12}>\r\n                            <Form.Group>\r\n                                <Select options={options} isClearable={true} onChange={setState} isSearchable={true}\r\n                                    value={options ?\r\n                                        options[options.findIndex(x => x.value === parseInt(state.id))]\r\n                                        : { value: state.id, label: state.name }\r\n                                    } />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4} sm={12}>\r\n                            <Form.Group>\r\n                                <Select options={optionDist} isClearable={true} onChange={setDistrict}\r\n                                    value={optionDist ?\r\n                                        optionDist[optionDist.findIndex(x => x.value === parseInt(city.id))]\r\n                                        : { value: city.id, label: city.name }\r\n                                    } />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4} sm={12}>\r\n                            <Button className=\"searchBtn\" onClick={() => searchCal(city.id)} variant=\"outline-dark\">Search</Button>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <hr />\r\n\r\n                    {\r\n                        // progess.display ? <div className=\"d-flex justify-content-center\">\r\n                        //     <Spinner animation=\"border\" role=\"status\">\r\n                        //         <span className=\"sr-only\">Loading...</span>\r\n                        //     </Spinner>\r\n                        // </div> :\r\n                            centerListpss ?\r\n                                <CenterTable\r\n                                    searchCal={searchCal}\r\n                                    centerList={centerListpss}\r\n                                />\r\n                                : <p>Select Sate and Dist</p>\r\n                    }\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <Modal\r\n                size=\"sm\" show={progess.display}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered className=\"spinnerModel\"\r\n            >\r\n                <Modal.Body>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {\r\n                !network.status ?\r\n                    <div className=\"fixed-bottom\">\r\n                        <Alert show={show} variant=\"danger\" className=\"m-0\"\r\n                            onClose={() => setShow(false)} dismissible>\r\n                            <div className=\"container d-flex align-items-center\">\r\n                                <h5>{network.msg}</h5>\r\n                            </div>\r\n                        </Alert>\r\n                    </div>\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchFrm;","import './App.css';\nimport React, { useState } from \"react\";\nimport { Container, Navbar, Button, Alert } from \"react-bootstrap\";\nimport SearchFrm from './Components/SearchFrm';\nimport 'boxicons';\nfunction App() {\n\n\n\n  function scrollTop() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n\n\n  // setInterval(() => {\n  //   // console.log('Initially ' + (window.navigator.onLine ? 'on' : 'off') + 'line');\n  //   if (window.navigator.onLine) {\n  //     setnetwork({ status: true, msg: \"Your Online !\" });\n  //   } else {\n  //     setnetwork({ status: false, msg: \"Your Offline. plese Check Connection !\" });\n  //     setShow(true);\n  //   }\n  // }, 200);\n\n  return (\n    <div >\n      <div className=\"mb-5\">\n        <Navbar bg=\"light\" className=\"bg-white shadow mb-3 sticky-top\" >\n          <Container>\n            <Navbar.Brand href=\"#\">COVID</Navbar.Brand>\n          </Container>\n        </Navbar>\n        <Container >\n          <SearchFrm key=\"srchfrm\" />\n        </Container>\n\n      </div>\n      <Button className=\"toTop shadow\" variant=\"outline-dark\" onClick={() => scrollTop()}>\n        <box-icon name='up-arrow-alt'></box-icon>\n      </Button>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}