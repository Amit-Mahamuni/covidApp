{"version":3,"sources":["Components/CenterTable.js","Components/SearchFrm.js","App.js","reportWebVitals.js","index.js"],"names":["CenterTable","props","useState","filterlist","setfilterlist","filterCenterList","setfilterCenterList","blockSelect","setblockSelect","show","setShow","centDetail","setcentDetail","useEffect","console","log","ageTemp","temp","centerList","centers","fee","filter","center","fee_type","toLowerCase","includes","block_name","age","sessions","sess","min_age_limit","length","vaccine","availbility","available_capacity","setFilter","dateset","filterOptSet","setFitopt","opt","val","split","FilterOpt","Object","keys","map","className","ButtonGroup","Button","size","variant","onClick","class","Form","Group","controlId","Control","as","value","onChange","event","target","CenterDetail","session","Modal","onHide","centered","Header","closeButton","Body","Row","Col","name","district_name","state_name","pincode","ListGroup","Item","Badge","pill","slots","time","available_capacity_dose1","available_capacity_dose2","Title","cent","push","date","slotDetail","cent_id","sess_id","cent_temp","find","center_id","sess_temp","session_id","sm","restsetFitopt","aria-label","Table","striped","bordered","hover","keyName","Date","reverse","join","toLocaleString","undefined","day","month","year","vaccine_fees","datecol","SearchFrm","id","state","setstate","city","setcity","stateList","setstateList","distList","setdistList","states","filterstateList","setfilterstateList","dist","filterdistList","setfilterdistList","centerListpss","setcenterListpss","searchCal","dis_id","axios","get","toISOString","slice","then","response","data","localStorage","setItem","JSON","stringify","StateList","action","state_id","CityList","district_id","getItem","parse","getLocalValue","Card","md","type","placeholder","autocomplete","Text","districts","App","Navbar","bg","Container","Brand","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70b21258.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Table, Badge, Row, Col, Modal, ListGroup, ButtonGroup, Button, Form } from \"react-bootstrap\";\r\n\r\nfunction CenterTable(props) {\r\n    // let filter = { \"fee\": \"All\", \"availbility\": \"All\", \"age\": \"All\", \"vaccine\": \"All\", \"block_name\": \"All\" }\r\n    // const [filterlist, setfilterlist] = useState({ All: true, Paid: false, Free: false });\r\n    const [filterlist, setfilterlist] = useState({ \"fee\": \"All\", \"availbility\": \"All\", \"age\": \"All\", \"vaccine\": \"All\", \"block_name\": \"All\" });\r\n    const [filterCenterList, setfilterCenterList] = useState();\r\n    const [blockSelect, setblockSelect] = useState();\r\n    const [show, setShow] = useState(false);\r\n    const [centDetail, setcentDetail] = useState({ \"center\": \"\", \"session\": \"\" });\r\n    // const [modelDetail, setmodelDetail] = useState({ \"center\": \"\", \"session\": \"\" });\r\n\r\n    useEffect(() => {\r\n        setFilter();\r\n        setShow(false);\r\n    }, [filterlist]);\r\n\r\n    useEffect(() => {\r\n        console.log(centDetail);\r\n        // if (centDetail.center != \"\" && centDetail.session != \"\") {\r\n        //     let cent_temp = props.centerList.centers.find((cent) => centDetail.center === cent.center_id);\r\n        //     let sess_temp = cent_temp.sessions.find((sess) => centDetail.session === sess.session_id);            \r\n        //     setmodelDetail({\"center\": cent_temp, \"session\": sess_temp });\r\n        //     console.log(modelDetail);\r\n        // }\r\n    }, [centDetail]);\r\n\r\n\r\n    const dateset = [];\r\n\r\n    const filterOptSet = {\r\n        \"fee\": [],\r\n        \"availbility\": [\"Available\", \"Book\"],\r\n        \"age\": [],\r\n        \"vaccine\": [],\r\n        \"block_name\": []\r\n    }\r\n\r\n    props.centerList.centers.map((cent) => {\r\n        if (!filterOptSet.block_name.includes(cent.block_name)) { filterOptSet.block_name.push(cent.block_name) }\r\n        if (!filterOptSet.fee.includes(cent.fee_type)) { filterOptSet.fee.push(cent.fee_type) }\r\n        cent.sessions.map((sess) => {\r\n            if (!dateset.includes(sess.date)) { dateset.push(sess.date) }\r\n            if (!filterOptSet.vaccine.includes(sess.vaccine)) { filterOptSet.vaccine.push(sess.vaccine) }\r\n            if (!filterOptSet.age.includes(sess.min_age_limit)) { filterOptSet.age.push(sess.min_age_limit) }\r\n        }\r\n        )\r\n    }\r\n    )\r\n\r\n    function setFilter() {\r\n\r\n        // if (id == 1) {\r\n        //     setfilterlist({ All: false, Paid: true, Free: false });\r\n        //     setfilterCenterList({ centers: props.centerList.centers.filter((center) => { return center.fee_type.toLowerCase().includes((\"Paid\").toLowerCase()) }) });\r\n        //     // console.log(filterCenterList);\r\n        // } else if (id == 2) {\r\n        //     setfilterlist({ All: false, Paid: false, Free: true });\r\n        //     setfilterCenterList({ centers: props.centerList.centers.filter((center) => { return center.fee_type.toLowerCase().includes((\"Free\").toLowerCase()) }) });\r\n        //     // console.log(filterCenterList);\r\n        // } else {\r\n        //     setfilterlist({ All: true, Paid: false, Free: false });\r\n        //     setfilterCenterList();\r\n        // }\r\n        console.log(\"render\");\r\n        let temp = props.centerList.centers;\r\n\r\n        if (filterlist.fee != \"All\") {\r\n            temp = temp.filter((center) =>\r\n                center.fee_type.toLowerCase().includes((filterlist.fee).toLowerCase())\r\n            )\r\n            // setfilterCenterList({ centers: temp });\r\n        }\r\n\r\n        if (filterlist.block_name != \"All\") {\r\n            temp = temp.filter((center) =>\r\n                center.block_name == filterlist.block_name\r\n            )\r\n            // setfilterCenterList({ centers: temp });\r\n        }\r\n\r\n        if (filterlist.age != \"All\") {\r\n            // temp = props.centerList.centers;\r\n            let ageTemp;\r\n            temp = temp.filter((center) => {\r\n                ageTemp = center.sessions.filter(sess => sess.min_age_limit === filterlist.age)\r\n                if (ageTemp.length === 0) {\r\n                    return false;\r\n                }\r\n                center.sessions = ageTemp;\r\n                return true;\r\n            }\r\n            );\r\n            // setfilterCenterList({ centers: temp });\r\n        }\r\n\r\n        if (filterlist.vaccine != \"All\") {\r\n            // temp = props.centerList.centers;\r\n            let ageTemp;\r\n            temp = temp.filter((center) => {\r\n                ageTemp = center.sessions.filter(sess =>\r\n                    sess.vaccine.toLowerCase().includes((filterlist.vaccine).toLowerCase())\r\n                )\r\n                if (ageTemp.length === 0) {\r\n                    return false;\r\n                }\r\n                center.sessions = ageTemp;\r\n                return true;\r\n            }\r\n            );\r\n            // setfilterCenterList({ centers: temp });\r\n        }\r\n\r\n        if (filterlist.availbility != \"All\") {\r\n            // temp = props.centerList.centers;\r\n            let ageTemp;\r\n            temp = temp.filter((center) => {\r\n                ageTemp = center.sessions.filter(sess =>\r\n                    filterlist.availbility === \"Available\" ?\r\n                        sess.available_capacity > 0 : sess.available_capacity == 0\r\n                )\r\n                if (ageTemp.length === 0) {\r\n                    return false;\r\n                }\r\n                center.sessions = ageTemp;\r\n                return true;\r\n            }\r\n            );\r\n            // setfilterCenterList({ centers: temp });\r\n        }\r\n\r\n        if (filterlist.fee == \"All\" && filterlist.age == \"All\" &&\r\n            filterlist.vaccine == \"All\" && filterlist.availbility == \"All\"\r\n            && filterlist.block_name == \"All\") {\r\n            setfilterCenterList();\r\n        } else {\r\n            setfilterCenterList({ centers: temp });\r\n        }\r\n\r\n        // setfilterCenterList(\r\n        //     {\r\n        //         centers: props.centerList.centers.filter((center) =>\r\n        //             center.fee_type.toLowerCase().includes((filterlist.fee).toLowerCase())\r\n        //         ).filter((center) =>\r\n        //             center.sessions.map((sess) => { if (sess.min_age_limit == 18) { return true } else { return false } }\r\n        //             )\r\n        //         )\r\n        //     }\r\n        // );\r\n\r\n    }\r\n\r\n    function dateformat(date) {\r\n        const dateObject = new Date((date).split(\"-\").reverse().join(\"/\"));\r\n        // const humanDateFormat = dateObject.toLocaleString();\r\n        var option = { day: \"numeric\", month: \"short\", year: \"numeric\" };\r\n        return dateObject.toLocaleString(undefined, option);\r\n    }\r\n\r\n    function setFitopt(opt, val) {\r\n        if (opt.split(\" \")[0] == \"block_name\") {\r\n            setblockSelect(val);\r\n            console.log(opt + \" = \" + val);\r\n        }\r\n        setfilterlist({ ...filterlist, [opt]: val });\r\n    }\r\n\r\n    function FilterOpt() {\r\n\r\n        return (\r\n            Object.keys(filterOptSet).map(function (opt) {\r\n                if (opt != \"block_name\") {\r\n                    return (\r\n                        <div className=\"mr-2 my-2\" key={opt}>\r\n                            <ButtonGroup >\r\n                                <Button size=\"sm\" variant=\"outline-secondary\"\r\n                                    className={filterlist[opt] == \"All\" ? \"active\" : \"inactive\"}\r\n                                    onClick={() => setFitopt(opt, \"All\")}>All</Button>\r\n                                {\r\n                                    filterOptSet[opt].map((fee) =>\r\n                                        <Button size=\"sm\" variant=\"outline-secondary\" key={opt + \"_\" + fee}\r\n                                            className={filterlist[opt] == fee ? \"active\" : \"inactive\"}\r\n                                            onClick={() => setFitopt(opt, fee)}>{fee}\r\n                                        </Button>\r\n                                    )\r\n                                }\r\n\r\n                            </ButtonGroup>\r\n                            <small class=\"text-muted form-text\">{opt}</small>\r\n                        </div >\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\" className=\"mr-2 my-2\" key={opt}>\r\n                            <Form.Control as=\"select\" value={blockSelect} onChange={(event) => setFitopt(\"block_name\", event.target.value)}>\r\n                                <option>All</option>\r\n                                {\r\n                                    filterOptSet[opt].map((fee) =>\r\n                                        <option>{fee}</option>\r\n                                    )\r\n                                }\r\n                            </Form.Control>\r\n                            <small class=\"text-muted form-text\">{opt}</small>\r\n                        </Form.Group>\r\n                    )\r\n                }\r\n\r\n            })\r\n        )\r\n\r\n    }\r\n\r\n    function restsetFitopt(opt) {\r\n        console.log(opt);\r\n    }\r\n\r\n    function CenterDetail() {\r\n        return (\r\n            centDetail.center && centDetail.session ?\r\n                <Modal show={show} onHide={() => setShow(false)} centered>\r\n                    <Modal.Header closeButton>\r\n                        <h5>Center Details</h5>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <span>\r\n                                        <span className=\"centerTitle\">{centDetail.center.name} </span><br />\r\n                                        <span className=\"centerSubTitle\">{centDetail.center.block_name + \", \" + centDetail.center.district_name + \", \" + centDetail.center.state_name + \",\" + centDetail.center.pincode}</span>\r\n                                    </span>\r\n                                    <Button variant=\"outline-secondary\" className=\"searchBtn\">Get Direction</Button>\r\n                                </Col>\r\n                                <Col>\r\n                                    <ListGroup variant=\"flush\" className=\"modelList\">\r\n                                        <ListGroup.Item>{centDetail.session.vaccine}</ListGroup.Item>\r\n                                        <ListGroup.Item>Fee : <Badge variant=\"info\">{centDetail.center.fee_type}</Badge> </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            {\r\n                                                centDetail.session.available_capacity != 0 ?\r\n                                                    <Badge pill variant=\"info\" className=\"border\">{\"Available : \" + centDetail.session.available_capacity}</Badge>\r\n                                                    : <Badge pill variant=\"danger\" className=\"border\">Booked</Badge>\r\n                                            }\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>{\"Age \" + centDetail.session.min_age_limit + \"+\"}</ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <hr />\r\n                        <div>\r\n                            <h5>Slot Details</h5>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h6>Time</h6>\r\n                                    <ListGroup className=\"modeltimeSlotList\">\r\n                                        {\r\n                                            centDetail.session.slots.map((time) =>\r\n                                                <ListGroup.Item>{time}</ListGroup.Item>\r\n                                            )\r\n                                        }\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <h6>Vaccin </h6>\r\n                                    <ListGroup className=\"list-group-numbered\">\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between align-items-center\">\r\n                                            <span>1st Dose :</span><span>{centDetail.session.available_capacity_dose1}</span></ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between align-items-center\">\r\n                                            <span>2nd Dose :</span><span>{centDetail.session.available_capacity_dose2}</span></ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                : <Modal show={show} onHide={() => setShow(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                </Modal>\r\n        )\r\n    }\r\n\r\n    const slotDetail = (cent_id, sess_id) => {\r\n        console.log(cent_id + \"=\" + sess_id);\r\n        let cent_temp = props.centerList.centers.find((cent) => cent_id === cent.center_id);\r\n        let sess_temp = cent_temp.sessions.find((sess) => sess_id === sess.session_id);\r\n        // setcentDetail({\"center\":cent_temp, \"session\":sess_temp})\r\n        setcentDetail({ ...centDetail, \"center\": cent_temp, \"session\": sess_temp })\r\n\r\n        console.log(cent_temp);\r\n        console.log(sess_temp);\r\n        setShow(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CenterDetail />\r\n            <div className=\"filterSec\">\r\n                <h5>Filter</h5>\r\n                <div className=\"filterOptSec\">\r\n                    <FilterOpt />\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <br />\r\n            <div >\r\n                <Row><Col className=\"d-flex my-1 align-items-center\" sm={8}>\r\n                    {\r\n                        Object.keys(filterOptSet).find((sess) => filterlist[sess] != \"All\") ?\r\n                            <div className=\"filterOptSec\"><h5 className=\"filterTitleTxt\">Result For :</h5>\r\n                                {\r\n                                    Object.keys(filterOptSet).map((opt) => {\r\n                                        if (filterlist[opt] != \"All\") {\r\n                                            return (\r\n                                                <Button size=\"sm\" variant=\"outline-dark\" key={opt + \"_Tag\"}\r\n                                                    className=\"filterTag mx-1\" onClick={() => restsetFitopt(opt)}>\r\n                                                    {opt == \"age\" ? \"Age \" + filterlist[opt] + \"+\" : filterlist[opt]}\r\n                                                </Button>\r\n                                            )\r\n                                        }\r\n                                    }\r\n\r\n                                    )\r\n                                }</div> : <h5 className=\"filterTitleTxt\">Result</h5>\r\n                    }\r\n                </Col><Col className=\"d-flex flex-row-reverse my-1 align-items-center\" sm={4}>\r\n                        <ButtonGroup className=\"ml-2\" aria-label=\"First group\">\r\n                            <Button variant=\"outline-secondary\" size=\"sm\">Prev</Button>\r\n                            <Button variant=\"outline-secondary\" size=\"sm\">Next</Button>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"sticky-col first-col\">Center</th>\r\n                            {\r\n                                dateset.map((keyName) => {\r\n                                    return (\r\n                                        <th key={keyName} >\r\n                                            {dateformat(keyName)}\r\n                                        </th>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            filterCenterList ?\r\n                                filterCenterList.centers.map((cent) =>\r\n                                    <tr>\r\n                                        <td className=\"sticky-col first-col\">\r\n                                            <span className=\"centerTitle\">{cent.name} </span>\r\n                                            {cent.fee_type == \"Paid\" ? <Badge variant=\"info\">{cent.fee_type}</Badge> : <span></span>} <br />\r\n                                            <span className=\"centerSubTitle\">{cent.block_name + \", \" + cent.district_name + \", \" + cent.state_name + \",\" + cent.pincode}</span>\r\n                                            {cent.vaccine_fees ? cent.vaccine_fees.map((fee) => { return (<span className=\"feetext\"><br /><span>{fee.vaccine + \" : ₹\" + fee.fee} </span><br /></span>) }) : <span></span>}\r\n                                        </td>\r\n                                        {\r\n                                            dateset.map((datecol) => {\r\n                                                let temp;\r\n                                                temp = cent.sessions.find((sess) => datecol === sess.date)\r\n                                                return (\r\n                                                    <td className=\"text-center \">\r\n                                                        {\r\n                                                            temp !== undefined ?\r\n                                                                <span>\r\n                                                                    {\r\n                                                                        temp.available_capacity != 0 ?\r\n                                                                            <Badge pill variant=\"info\" className=\"border\">{\"Available : \" + temp.available_capacity}</Badge>\r\n                                                                            : <Badge pill variant=\"danger\" className=\"border\">Booked</Badge>\r\n                                                                    }\r\n                                                                    <br /><span className=\"centerTitle \" > {temp.vaccine}</span><br />\r\n                                                                    <span className=\"centerSubTitle \">{\"Age \" + temp.min_age_limit + \"+\"}</span><br />\r\n                                                                    <Button variant=\"outline-secondary\" size=\"sm\" className=\"detailBtn\"\r\n                                                                        onClick={() => slotDetail(cent.center_id, temp.session_id)}>Detail</Button>\r\n\r\n                                                                </span>\r\n                                                                :\r\n                                                                <span>\r\n                                                                    <Badge pill variant=\"light\" className=\"border\">N/A</Badge>\r\n                                                                </span>\r\n                                                        }\r\n\r\n                                                    </td>\r\n                                                )\r\n                                            }\r\n                                            )\r\n                                        }\r\n                                    </tr>\r\n                                )\r\n                                :\r\n                                props.centerList ?\r\n                                    props.centerList.centers.map((cent) =>\r\n                                        // console.log(cent)\r\n                                        <tr>\r\n                                            <td className=\"sticky-col first-col\">\r\n                                                <span className=\"centerTitle\">{cent.name} </span>\r\n                                                {cent.fee_type == \"Paid\" ? <Badge variant=\"info\">{cent.fee_type}</Badge> : <span></span>} <br />\r\n                                                <span className=\"centerSubTitle\">{cent.block_name + \", \" + cent.district_name + \", \" + cent.state_name + \",\" + cent.pincode}</span>\r\n                                                {cent.vaccine_fees ? cent.vaccine_fees.map((fee) => { return (<span className=\"feetext\"><br /><span>{fee.vaccine + \" : ₹\" + fee.fee} </span><br /></span>) }) : <span></span>}\r\n                                            </td>\r\n\r\n                                            {\r\n                                                dateset.map((datecol) => {\r\n                                                    let temp;\r\n                                                    temp = cent.sessions.find((sess) => datecol === sess.date)\r\n                                                    return (\r\n                                                        <td className=\"text-center \">\r\n                                                            {\r\n                                                                temp !== undefined ?\r\n                                                                    <span>\r\n                                                                        {\r\n                                                                            temp.available_capacity != 0 ?\r\n                                                                                <Badge pill variant=\"info\">{\"Available : \" + temp.available_capacity}</Badge>\r\n                                                                                : <Badge pill variant=\"danger\">Booked</Badge>\r\n                                                                        }\r\n                                                                        <br /><span className=\"centerTitle \" > {temp.vaccine}</span><br />\r\n                                                                        <span className=\"centerSubTitle \">{\"Age \" + temp.min_age_limit + \"+\"}</span><br />\r\n                                                                        <Button variant=\"outline-secondary\" size=\"sm\" className=\"detailBtn\"\r\n                                                                            onClick={() => slotDetail(cent.center_id, temp.session_id)}>Detail</Button>\r\n\r\n                                                                    </span>\r\n                                                                    :\r\n                                                                    <span>\r\n                                                                        <Badge pill variant=\"light\" className=\"border\">N/A</Badge>\r\n                                                                    </span>\r\n                                                            }\r\n\r\n                                                        </td>\r\n                                                    )\r\n                                                }\r\n                                                )\r\n                                            }\r\n                                        </tr>\r\n                                    )\r\n                                    : <p></p>\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CenterTable;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Col, Form, ListGroup } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport CenterTable from \"./CenterTable\";\r\n\r\nfunction SearchFrm() {\r\n\r\n    const [state, setstate] = useState({ id: \"\", name: \"\" });\r\n    const [city, setcity] = useState({ id: \"\", name: \"\" });\r\n    const [stateList, setstateList] = useState({});\r\n    const [distList, setdistList] = useState({});\r\n    const [filterstateList, setfilterstateList] = useState({ states: [], show: false });\r\n    const [filterdistList, setfilterdistList] = useState({ dist: [], show: false });\r\n    const [centerListpss, setcenterListpss] = useState();\r\n\r\n    useEffect(() => {\r\n        getList();\r\n        getLocalValue();\r\n    }, []);\r\n\r\n    function getList() {\r\n        axios.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\").then((response) => {\r\n            setstateList(response.data);\r\n            console.log(stateList.states);\r\n        });\r\n    }\r\n\r\n    function getLocalValue() {\r\n        if (localStorage.getItem(\"state\") != null &&\r\n            localStorage.getItem(\"state\") != \"\" &&\r\n            localStorage.getItem(\"state\") != undefined) {\r\n            setstate(JSON.parse(localStorage.getItem(\"state\")));\r\n            axios.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/districts/\" + JSON.parse(localStorage.getItem(\"state\")).id).then((response) => {\r\n                setdistList(response.data);\r\n                console.log(response.data);\r\n            });\r\n        }\r\n        if (localStorage.getItem(\"district\") != null &&\r\n            localStorage.getItem(\"district\") != \"\" &&\r\n            localStorage.getItem(\"district\") != undefined) {\r\n            setcity(JSON.parse(localStorage.getItem(\"district\")));\r\n        }\r\n        if (localStorage.getItem(\"centerlist\") != null &&\r\n            localStorage.getItem(\"centerlist\") != \"\" &&\r\n            localStorage.getItem(\"centerlist\") != undefined) {\r\n            setcenterListpss(JSON.parse(localStorage.getItem(\"centerlist\")));\r\n        }\r\n    }\r\n\r\n    function onstate(event) {\r\n        setstate({ name: event.target.value });\r\n        if (stateList) {\r\n            setfilterstateList({ states: stateList.states.filter((state) => { return state.state_name.toLowerCase().includes((event.target.value).toLowerCase()) }), show: true });\r\n        } else {\r\n            console.log(\"empty\");\r\n        }\r\n    }\r\n\r\n    function oncity(event) {\r\n        setcity({ name: event.target.value });\r\n        if (stateList) {\r\n            setfilterdistList({ dist: distList.districts.filter((dist) => { return dist.district_name.toLowerCase().includes((event.target.value).toLowerCase()) }), show: true });\r\n        } else {\r\n            console.log(\"empty\");\r\n        }\r\n    }\r\n\r\n    function setState(id, name) {\r\n        setstate({ name: name, id: id });\r\n        setfilterstateList({});\r\n        localStorage.setItem(\"state\", JSON.stringify({ name: name, id: id }));\r\n        localStorage.setItem(\"district\", null);\r\n        setcity({ name: \"\", id: \"\" });\r\n        axios.get(\"https://cdn-api.co-vin.in/api/v2/admin/location/districts/\" + id).then((response) => {\r\n            setdistList(response.data);\r\n            console.log(response.data);\r\n        });\r\n    }\r\n\r\n    function setDistrict(id, name) {\r\n        setcity({ name: name, id: id });\r\n        localStorage.setItem(\"district\", JSON.stringify({ name: name, id: id }));\r\n        setfilterdistList({});\r\n    }\r\n\r\n    function searchCal(dis_id) {\r\n        axios.get(\"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=\" + dis_id + \"&date=\" + getCurrDate()).then((response) => {\r\n            setcenterListpss(response.data);\r\n            localStorage.setItem(\"centerlist\", JSON.stringify(response.data));\r\n        });\r\n    }\r\n\r\n    function getCurrDate() {\r\n        return new Date().toISOString().slice(0, 10).split(\"-\").reverse().join(\"-\");\r\n    }\r\n\r\n    function StateList() {\r\n        return (\r\n            <ListGroup >\r\n                {\r\n                    filterstateList.show ?\r\n                        filterstateList.states.map((state) =>\r\n                            <ListGroup.Item action onClick={() => setState(state.state_id, state.state_name)}>{state.state_name}</ListGroup.Item>\r\n                        )\r\n                        : <span></span>\r\n                }\r\n            </ListGroup>\r\n        );\r\n    }\r\n\r\n    function CityList() {\r\n        return (\r\n            <ListGroup >\r\n                {\r\n                    filterdistList.show ?\r\n                        filterdistList.dist.map((dist) =>\r\n                            <ListGroup.Item action onClick={() => setDistrict(dist.district_id, dist.district_name)}>{dist.district_name}</ListGroup.Item>\r\n                        )\r\n                        : <span></span>\r\n                }\r\n            </ListGroup>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Card className=\"bg-white shadow\">\r\n            <Card.Body>\r\n                <Card.Title><h5>Search vaccination center near you.</h5></Card.Title>\r\n                <Form.Row>\r\n                    <Col md={4} sm={12}>\r\n                        <Form.Group>\r\n                            <Form.Control onChange={onstate} value={state.name}\r\n                                type=\"text\" placeholder=\"State\" id=\"inpState\" name=\"inpState\" autocomplete=\"off\"/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                Enter State Name \r\n                            </Form.Text>\r\n                            <StateList />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={4} sm={12}>\r\n                        <Form.Group>\r\n                            <Form.Control onChange={oncity} value={city.name}\r\n                                type=\"text\" placeholder=\"City\" id=\"inpCity\" name=\"inpCity\" autocomplete=\"off\"/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                Enter District Name \r\n                            </Form.Text>\r\n                            <CityList />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md={4} sm={12}>\r\n                        <Button className=\"searchBtn\" onClick={() => searchCal(city.id)} variant=\"outline-dark\">Search</Button>\r\n                    </Col>\r\n                </Form.Row>\r\n                <hr />\r\n                {\r\n                    centerListpss ?\r\n                        <CenterTable centerList={centerListpss} />\r\n                        : <p>Select Sate and Dist</p>\r\n                }\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SearchFrm;","import './App.css';\nimport { Container, Navbar } from \"react-bootstrap\";\nimport SearchFrm from './Components/SearchFrm';\nfunction App() {\n  return (\n    <div className=\"mb-5\">\n      <Navbar bg=\"light\" className=\"bg-white shadow mb-3\">\n        <Container>\n          <Navbar.Brand href=\"#\">COVID</Navbar.Brand>\n        </Container>\n      </Navbar>\n      <Container >\n        <SearchFrm />\n      </Container>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}